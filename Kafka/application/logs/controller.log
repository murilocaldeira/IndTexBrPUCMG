[2021-03-31 16:36:33,321] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2021-03-31 16:36:55,363] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-03-31 16:36:55,396] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2021-03-31 16:36:55,418] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(Enabled,Features{}) (kafka.controller.KafkaController)
[2021-03-31 16:36:55,575] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2021-03-31 16:36:55,585] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-03-31 16:36:55,589] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-03-31 16:36:55,593] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2021-03-31 16:36:55,636] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 24) (kafka.controller.KafkaController)
[2021-03-31 16:36:55,648] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2021-03-31 16:36:55,663] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2021-03-31 16:36:55,675] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2021-03-31 16:36:55,676] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2021-03-31 16:36:55,677] INFO [Controller id=1] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2021-03-31 16:36:55,677] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-03-31 16:36:55,687] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-03-31 16:36:55,687] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2021-03-31 16:36:55,688] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2021-03-31 16:36:55,689] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-03-31 16:36:55,691] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2021-03-31 16:36:55,695] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2021-03-31 16:36:55,743] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-03-31 16:36:55,744] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-03-31 16:36:55,762] INFO [RequestSendThread controllerId=1] Controller 1 connected to DESKTOP-UQHTLJ1.mshome.net:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-03-31 16:36:55,764] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-03-31 16:36:55,765] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2021-03-31 16:36:55,766] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-03-31 16:36:55,767] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-03-31 16:36:55,771] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2021-03-31 16:36:55,771] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2021-03-31 16:36:55,778] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-03-31 16:36:55,779] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-03-31 16:36:55,779] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-03-31 16:36:55,780] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-03-31 16:36:55,781] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-03-31 16:36:55,802] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-03-31 16:37:00,811] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 16:37:00,812] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 16:37:11,159] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2021-03-31 16:37:11,161] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2021-03-31 16:37:11,173] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2021-03-31 16:37:11,175] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2021-03-31 16:37:11,183] INFO [RequestSendThread controllerId=1] Controller 1 connected to DESKTOP-UQHTLJ1.mshome.net:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-03-31 16:37:11,186] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2021-03-31 16:37:11,189] INFO [Controller id=1] Updated broker epochs cache: Map(2 -> 44, 1 -> 24) (kafka.controller.KafkaController)
[2021-03-31 16:37:11,269] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-03-31 16:37:11,291] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2021-03-31 16:40:15,023] INFO [Controller id=1] New topics: [Set(product_topic)], deleted topics: [Set()], new partition replica assignment [Map(product_topic-1 -> ReplicaAssignment(replicas=1,2, addingReplicas=, removingReplicas=), product_topic-0 -> ReplicaAssignment(replicas=2,1, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-03-31 16:40:15,024] INFO [Controller id=1] New partition creation callback for product_topic-1,product_topic-0 (kafka.controller.KafkaController)
[2021-03-31 16:40:30,868] INFO [Controller id=1] New topics: [Set(customer_topic)], deleted topics: [Set()], new partition replica assignment [Map(customer_topic-1 -> ReplicaAssignment(replicas=2,1, addingReplicas=, removingReplicas=), customer_topic-0 -> ReplicaAssignment(replicas=1,2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-03-31 16:40:30,869] INFO [Controller id=1] New partition creation callback for customer_topic-1,customer_topic-0 (kafka.controller.KafkaController)
[2021-03-31 16:41:44,837] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2021-03-31 16:41:44,837] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2021-03-31 16:42:00,818] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 16:42:00,818] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 16:42:00,822] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 16:42:00,823] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 16:42:00,824] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 16:42:00,824] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 16:47:00,836] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 16:47:00,836] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 16:47:00,838] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 16:47:00,838] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 16:47:00,838] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 16:47:00,838] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 16:52:00,847] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 16:52:00,847] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 16:52:00,850] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 16:52:00,850] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 16:52:00,850] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 16:52:00,850] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 16:57:00,863] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 16:57:00,863] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 16:57:00,865] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 16:57:00,865] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 16:57:00,865] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 16:57:00,865] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:02:00,866] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:02:00,868] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:02:00,869] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:02:00,869] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:02:00,869] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:02:00,869] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:07:00,877] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:07:00,877] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:07:00,879] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:07:00,879] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:07:00,879] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:07:00,879] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:12:00,892] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:12:00,892] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:12:00,894] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:12:00,894] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:12:00,894] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:12:00,894] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:17:00,902] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:17:00,902] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:17:00,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:17:00,903] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:17:00,903] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:17:00,903] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:22:00,909] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:22:00,909] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:22:00,910] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:22:00,910] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:22:00,910] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:22:00,910] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:27:00,919] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:27:00,919] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:27:00,934] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:27:00,934] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:27:00,934] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:27:00,934] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:32:00,935] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:32:00,935] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:32:00,936] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:32:00,936] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:32:00,936] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:32:00,936] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:37:00,952] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:37:00,952] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:37:00,953] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:37:00,953] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:37:00,954] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:37:00,954] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:42:00,955] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:42:00,955] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:42:00,956] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:42:00,956] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:42:00,956] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:42:00,956] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:47:00,965] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:47:00,965] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:47:00,966] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:47:00,967] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:47:00,967] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:47:00,967] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:52:00,977] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:52:00,977] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:52:00,978] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:52:00,978] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:52:00,978] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:52:00,978] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:57:00,988] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 17:57:00,988] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 17:57:00,990] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 17:57:00,990] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 17:57:00,991] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 17:57:00,991] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:02:00,999] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:02:01,005] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:02:01,006] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:02:01,006] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:02:01,006] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:02:01,006] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:07:01,009] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:07:01,009] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:07:01,010] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:07:01,010] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:07:01,010] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:07:01,010] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:12:01,024] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:12:01,024] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:12:01,024] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:12:01,024] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:12:01,024] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:12:01,024] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:17:01,031] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:17:01,031] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:17:01,032] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:17:01,032] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:17:01,032] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:17:01,032] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:22:01,037] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:22:01,037] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:22:01,038] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:22:01,038] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:22:01,038] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:22:01,038] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:27:01,048] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:27:01,048] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:27:01,050] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:27:01,050] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:27:01,051] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:27:01,051] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:32:01,065] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:32:01,065] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:32:01,066] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:32:01,066] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:32:01,066] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:32:01,066] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:37:01,068] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:37:01,068] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:37:01,070] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:37:01,070] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:37:01,070] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:37:01,070] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:42:01,085] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:42:01,085] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:42:01,086] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:42:01,086] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:42:01,086] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:42:01,086] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:47:01,101] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:47:01,101] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:47:01,102] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:47:01,102] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:47:01,102] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:47:01,102] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:52:01,108] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:52:01,108] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:52:01,109] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:52:01,109] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:52:01,109] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:52:01,109] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:57:01,121] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 18:57:01,121] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 18:57:01,122] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 18:57:01,122] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 18:57:01,122] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 18:57:01,122] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:02:01,137] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 19:02:01,145] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 19:02:01,146] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 19:02:01,146] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:02:01,146] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 19:02:01,146] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:07:01,157] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 19:07:01,157] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 19:07:01,158] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 19:07:01,158] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:07:01,158] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 19:07:01,158] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:12:01,162] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 19:12:01,162] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 19:12:01,163] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 19:12:01,163] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:12:01,163] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 19:12:01,163] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:17:01,175] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 19:17:01,175] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 19:17:01,176] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 19:17:01,176] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:17:01,176] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 19:17:01,176] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:22:01,188] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 19:22:01,188] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 19:22:01,188] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 19:22:01,188] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:22:01,189] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 19:22:01,189] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:27:01,194] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 19:27:01,194] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 19:27:01,195] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 19:27:01,195] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:27:01,195] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 19:27:01,195] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:32:01,196] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 19:32:01,196] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 19:32:01,204] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 19:32:01,204] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:32:01,204] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 19:32:01,204] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:37:01,206] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 19:37:01,206] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 19:37:01,207] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 19:37:01,207] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:37:01,207] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 19:37:01,207] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:42:01,223] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 19:42:01,223] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 19:42:01,224] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 19:42:01,224] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:42:01,224] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2021-03-31 19:42:01,224] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:43:14,637] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2021-03-31 19:43:45,902] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2021-03-31 19:43:45,946] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2021-03-31 19:43:45,950] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2021-03-31 19:43:45,957] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2021-03-31 19:43:45,969] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2021-03-31 19:43:45,976] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2021-03-31 19:43:45,994] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 202) (kafka.controller.KafkaController)
[2021-03-31 19:43:46,020] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2021-03-31 19:43:46,095] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2021-03-31 19:43:46,126] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2021-03-31 19:43:46,127] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2021-03-31 19:43:46,127] INFO [Controller id=2] Current list of topics in the cluster: Set(product_topic, customer_topic, __consumer_offsets) (kafka.controller.KafkaController)
[2021-03-31 19:43:46,128] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2021-03-31 19:43:46,132] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2021-03-31 19:43:46,141] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2021-03-31 19:43:46,142] INFO [Controller id=2] List of topics ineligible for deletion: product_topic,customer_topic,__consumer_offsets (kafka.controller.KafkaController)
[2021-03-31 19:43:46,142] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2021-03-31 19:43:46,143] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(product_topic, customer_topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2021-03-31 19:43:46,144] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2021-03-31 19:43:46,176] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2021-03-31 19:43:46,197] INFO [RequestSendThread controllerId=2] Controller 2 connected to DESKTOP-UQHTLJ1.mshome.net:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2021-03-31 19:43:46,271] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-03-31 19:43:46,380] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2021-03-31 19:43:46,610] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OnlineReplica, [Topic=customer_topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OnlineReplica, [Topic=customer_topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica, [Topic=customer_topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OnlineReplica, [Topic=product_topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=customer_topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=product_topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=product_topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=product_topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2021-03-31 19:43:46,612] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2021-03-31 19:43:46,644] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2021-03-31 19:43:46,908] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OfflinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, customer_topic-0 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, product_topic-0 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, customer_topic-1 -> OnlinePartition, product_topic-1 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2021-03-31 19:43:46,909] INFO [Controller id=2] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2021-03-31 19:43:46,973] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2021-03-31 19:43:46,973] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2021-03-31 19:43:46,974] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2021-03-31 19:43:46,974] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2021-03-31 19:43:46,979] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2021-03-31 19:43:46,998] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2021-03-31 19:43:52,008] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2021-03-31 19:43:52,009] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2021-03-31 19:43:52,014] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2021-03-31 19:43:52,016] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2021-03-31 19:43:52,016] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 Map(__consumer_offsets-21 -> Vector(1), __consumer_offsets-27 -> Vector(1), __consumer_offsets-7 -> Vector(1), customer_topic-0 -> Vector(1, 2), __consumer_offsets-9 -> Vector(1), __consumer_offsets-25 -> Vector(1), __consumer_offsets-35 -> Vector(1), __consumer_offsets-41 -> Vector(1), __consumer_offsets-33 -> Vector(1), __consumer_offsets-23 -> Vector(1), __consumer_offsets-49 -> Vector(1), __consumer_offsets-47 -> Vector(1), __consumer_offsets-31 -> Vector(1), __consumer_offsets-3 -> Vector(1), __consumer_offsets-37 -> Vector(1), __consumer_offsets-15 -> Vector(1), __consumer_offsets-17 -> Vector(1), __consumer_offsets-19 -> Vector(1), __consumer_offsets-11 -> Vector(1), __consumer_offsets-13 -> Vector(1), __consumer_offsets-43 -> Vector(1), product_topic-1 -> Vector(1, 2), __consumer_offsets-39 -> Vector(1), __consumer_offsets-45 -> Vector(1), __consumer_offsets-1 -> Vector(1), __consumer_offsets-5 -> Vector(1), __consumer_offsets-29 -> Vector(1)) (kafka.controller.KafkaController)
[2021-03-31 19:43:52,016] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2021-03-31 19:43:52,018] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
